<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * RoleFunctionalityActionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RoleFunctionalityActionRepository extends EntityRepository
{
    public function getFunctionalitiesByRole($parametersCollection){
        $em = $this->getEntityManager();
        $queryText = "SELECT DISTINCT(n.id), n.id as functionality_id, n.name_es as functionality_name,
                      n.url_slug_es as url_slug, n.tree_slug, n.priority
                      FROM AppBundle:RoleFunctionalityAction rfa
                      INNER JOIN rfa.role r
                      INNER JOIN rfa.functionality n
                      WHERE r.id= ".$parametersCollection->roleId."
                      AND n.tree_slug LIKE '%functionality%' ORDER BY n.priority ASC";

        $query = $em->createQuery($queryText);
        $functionalitiesCollection = $query->getArrayResult();
        return $functionalitiesCollection;
    }


    public function getActionsByFunctionality($parametersCollection)
    {
        $em = $this->getEntityManager();
        $queryText = "SELECT DISTINCT(n.id), n.id as action_id, n.name_es as action_name,
                      n.url_slug_es, n.tree_slug, n.priority
                      FROM AppBundle:RoleFunctionalityAction rfa
                      INNER JOIN rfa.role r
                      INNER JOIN rfa.action n
                      WHERE n.tree_slug LIKE '%".$parametersCollection->functionality_tree_slug."%' ORDER BY n.priority ASC";

        $query = $em->createQuery($queryText);
        $actionsCollection = $query->getArrayResult();
        return $actionsCollection;
    }
}
