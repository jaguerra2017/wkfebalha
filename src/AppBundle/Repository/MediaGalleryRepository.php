<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MediaGalleryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MediaGalleryRepository extends EntityRepository
{
    public function getMediaGalleries($parametersCollection)
    {
        $qb = $this->createQueryBuilder('mg');
        $qb->select(' mg.priority,
                      m.id as id, m.name_es, m.description_es,
                      m.url,
                      n.id as media_type_id, n.name_es as media_type_name,
                      n.tree_slug as media_type_tree_slug')
            ->innerJoin('mg.gallery', 'g')
            ->innerJoin('mg.media', 'm')
            ->innerJoin('m.media_type', 'n');
        $whereAdded = false;
        if(isset($parametersCollection['galleryId'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("g.id =  ".$parametersCollection['galleryId']);
            }
            else{
                $qb->andWhere("g.id =  ".$parametersCollection['galleryId']);
            }
        }

        $qb->orderBy('mg.priority','ASC');
        return $qb->getQuery()->getArrayResult();
    }

    public function deleteGalleryElements($parametersCollection)
    {
        $em = $this->getEntityManager();
        $queryText = "DELETE FROM AppBundle:MediaGallery mg";
        $whereAdded = false;
        if(isset($parametersCollection['gallery_id'])){
            if(!$whereAdded){
                $whereAdded = true;
                $queryText.= " WHERE mg.gallery = ".$parametersCollection['gallery_id'];
            }
            else{
                $queryText.= " AND mg.gallery = ".$parametersCollection['gallery_id'];
            }
        }

        $query = $em->createQuery($queryText);
        $query->execute();
    }
}
