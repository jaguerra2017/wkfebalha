<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ContentBlockMediaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContentBlockMediaRepository extends EntityRepository
{

    public function getContentBlockMedias($parametersCollection){
        $qb = $this->createQueryBuilder('cbm');
        $qb->select(' cbm.id,
                      cb.id as content_block_id,
                      m.id as media_id')
            ->innerJoin('cbm.content_block', 'cb')
            ->innerJoin('cbm.media', 'm');

        $whereAdded = false;
        if(isset($parametersCollection['searchByIdsCollection']) && $parametersCollection['searchByIdsCollection'] == true
            && isset($parametersCollection['idsCollection'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("cbm.id IN (".$parametersCollection['idsCollection'].") ");
            }
            else{
                $qb->andWhere("cbm.id IN (".$parametersCollection['idsCollection'].") ");
            }
        }
        if(isset($parametersCollection['searchByContentBlockId']) && $parametersCollection['searchByContentBlockId'] == true){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("cb.id = ".$parametersCollection['contentBlockId']);
            }
            else{
                $qb->andWhere("cb.id = ".$parametersCollection['contentBlockId']);
            }
        }


        $qb->orderBy('cbm.id','ASC');
        return $qb->getQuery()->getArrayResult();
    }

    public function deleteByIdsCollection($idsCollection)
    {
        $em = $this->getEntityManager();
        $queryText = "DELETE FROM AppBundle:ContentBlockMedia cbm
                      WHERE cbm.id IN (".$idsCollection.")";
        $query = $em->createQuery($queryText);
        $query->execute();
    }
}
