<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{
    public function getUsers($parametersCollection)
    {
        $qb = $this->createQueryBuilder('u');
        $qb->select(' u.id, u.full_name, u.user_name, u.email,
                      r.id as role_id, r.name as role_name, r.slug as role_slug,
                      m.id as avatar_id, m.url as avatar_url')
            ->innerJoin('u.role', 'r')
            ->leftJoin('u.avatar', 'm');

        $whereAdded = false;
        if(isset($parametersCollection['generalSearchValue'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("u.full_name LIKE '%".$parametersCollection['generalSearchValue']."%' ");
            }
            else{
                $qb->andWhere("u.full_name LIKE '%".$parametersCollection['generalSearchValue']."%' ");
            }
        }
        if(isset($parametersCollection['searchByIdsCollection']) && $parametersCollection['searchByIdsCollection'] == true
            && isset($parametersCollection['idsCollection'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("u.id IN (".$parametersCollection['idsCollection'].") ");
            }
            else{
                $qb->andWhere("u.id IN (".$parametersCollection['idsCollection'].") ");
            }
        }

        $qb->orderBy('u.created_date','DESC');
        return $qb->getQuery()->getArrayResult();
    }
}
