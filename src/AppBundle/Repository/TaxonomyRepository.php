<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * TaxonomyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaxonomyRepository extends EntityRepository
{
    public function getTaxonomies($parametersCollection)
    {
        $qb = $this->createQueryBuilder('t');
        $qb->select('t.id, t.name_es, t.url_slug_es, t.tree_slug, t.created_date, t.depth,
                     u.full_name as author_full_name, u.user_name as author_user_name,
                     tt.id as taxonomy_type_id, tt.name_es as taxonomy_type_name,
                     tt.tree_slug as taxonomy_type_tree_slug, tp.id as parent_id,
                     tp.name_es as parent_name')
            ->innerJoin('t.taxonomy_type', 'tt')
            ->leftJoin('t.created_author', 'u')
            ->leftJoin('t.parent', 'tp');

        $whereAdded = false;
        if(isset($parametersCollection['generalSearchValue'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("t.name_es LIKE '%".$parametersCollection['generalSearchValue']."%' ");
            }
            else{
                $qb->andWhere("t.name_es LIKE '%".$parametersCollection['generalSearchValue']."%' ");
            }
        }
        if(isset($parametersCollection['taxonomyTypeTreeSlug'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("tt.tree_slug = '".$parametersCollection['taxonomyTypeTreeSlug']."'");
            }
            else{
                $qb->andWhere("tt.tree_slug = '".$parametersCollection['taxonomyTypeTreeSlug']."'");
            }
        }
        if(isset($parametersCollection['searchByParent'])){
            if(!$whereAdded){
                $whereAdded = true;
                if($parametersCollection['parentId'] == null){
                    $qb->where("t.parent IS NULL");
                }
                else{
                    $qb->where("tp.id = '".$parametersCollection['parentId']."'");
                }
            }
            else{
                if($parametersCollection['parentId'] == null){
                    $qb->andWhere("t.parent IS NULL");
                }
                else{
                    $qb->andWhere("tp.id = '".$parametersCollection['parentId']."'");
                }
            }
        }

        $qb->orderBy('t.created_date','ASC');
        return $qb->getQuery()->getArrayResult();
    }

    public function deleteByIdsCollection($idsCollection)
    {
        $em = $this->getEntityManager();
        $queryText = "DELETE FROM AppBundle:Taxonomy t
                      WHERE t.id IN (".$idsCollection.")";
        $query = $em->createQuery($queryText);
        $query->execute();
    }
}
