<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ContentBlockRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContentBlockRepository extends EntityRepository
{
    public function getContentBlocks($parametersCollection){
        $qb = $this->createQueryBuilder('cb');
        $qb->select(' cb.id, cb.title_es, cb.priority,
                      n.id as block_type_id, n.name_es as block_type_name, n.tree_slug as block_type_tree_slug,
                      gp.id as generic_post_id, cb.priority')
            ->innerJoin('cb.generic_post', 'gp')
            ->innerJoin('cb.content_block_type', 'n');

        $whereAdded = false;
        if(isset($parametersCollection['generalSearchValue'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("cb.title_es LIKE '%".$parametersCollection['generalSearchValue']."%' ");
            }
            else{
                $qb->andWhere("cb.title_es LIKE '%".$parametersCollection['generalSearchValue']."%' ");
            }
        }
        if(isset($parametersCollection['searchByGenericPost'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("gp.id =  ".$parametersCollection['genericPostId']);
            }
            else{
                $qb->andWhere("gp.id =  ".$parametersCollection['genericPostId']);
            }
        }
        if(isset($parametersCollection['searchByIdsCollection']) && $parametersCollection['searchByIdsCollection'] == true
            && isset($parametersCollection['idsCollection'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("cb.id IN (".$parametersCollection['idsCollection'].") ");
            }
            else{
                $qb->andWhere("cb.id IN (".$parametersCollection['idsCollection'].") ");
            }
        }

        if(isset($parametersCollection['getBlockWithLowerPriority']) && $parametersCollection['getBlockWithLowerPriority'] == true){
            $qb->orderBy('cb.priority','DESC');
            $contentBlocksCollection = $qb->getQuery()->getArrayResult();
            if(isset($contentBlocksCollection[0])){
                $contentBlocksCollection = $contentBlocksCollection[0];
            }
            return $contentBlocksCollection;
        }
        else{
            $qb->orderBy('cb.priority','ASC');
            return $qb->getQuery()->getArrayResult();
        }

    }

    public function deleteByIdsCollection($idsCollection)
    {
        $em = $this->getEntityManager();
        $queryText = "DELETE FROM AppBundle:ContentBlock cb
                      WHERE cb.id IN (".$idsCollection.")";
        $query = $em->createQuery($queryText);
        $query->execute();
    }
}
