<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * MediaImageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MediaImageRepository extends EntityRepository
{
    public function getMediaImages($parametersCollection)
    {
        $qb = $this->createQueryBuilder('mi');
        $qb->select(' mi.alternative_text_es, mi.size, mi.extension, mi.dimension, mi.is_loaded_by_system,
                     m.id, m.name_es, m.description_es, m.url, m.created_date, m.modified_date,
                     u.user_name as author_user_name, uu.user_name as modifier_user_name,
                     n.id as media_type_id, n.name_es as media_type_name')
            ->innerJoin('mi.id', 'm')
            ->innerJoin('m.media_type', 'n')
            ->leftJoin('m.created_author', 'u')
            ->leftJoin('m.modified_author', 'uu');

        $whereAdded = false;
        if(isset($parametersCollection['generalSearchValue'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("m.name_es LIKE '%".$parametersCollection['generalSearchValue']."%' ");
            }
            else{
                $qb->andWhere("m.name_es LIKE '%".$parametersCollection['generalSearchValue']."%' ");
            }
        }
        if(isset($parametersCollection['searchByIdsCollection']) && $parametersCollection['searchByIdsCollection'] == true
        && isset($parametersCollection['idsCollection'])){
            if(!$whereAdded){
                $whereAdded = true;
                $qb->where("m.id IN (".$parametersCollection['idsCollection'].") ");
            }
            else{
                $qb->andWhere("m.id IN (".$parametersCollection['idsCollection'].") ");
            }
        }

        $qb->orderBy('m.created_date','DESC');
        return $qb->getQuery()->getArrayResult();
    }
}
